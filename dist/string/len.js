// Generated by CoffeeScript 2.2.2
(function() {
  var _cjk, _utf8, len;

  module.exports = len = (string, mode = 'length') => {
    //#######################################
    //|
    //|  @params {string} string
    //|  @params {string} mode
    //|
    //|  @errors
    //|
    //|  @return {number} len
    //|
    //#######################################
    switch (mode) {
      case 'length':
        return string.length;
      case 'cjk':
        return _cjk(string);
      case 'utf8':
        return _utf8(string);
      default:
        throw `string.len >>> The { ${mode} } is not a invalid mode.`;
    }
  };

  _cjk = (string) => {
    var char, i, len1;
    //#######################################
    //|
    //|  @params {string}
    //|  @return {number} len
    //|
    //#######################################
    len = 0;
    for (i = 0, len1 = string.length; i < len1; i++) {
      char = string[i];
      if (char.charCodeAt(0) <= 127) {
        len += 1;
      } else {
        len += 2;
      }
    }
    return len;
  };

  _utf8 = (string) => {
    var char, code, i, len1;
    //#######################################
    //|
    //|  @params {string}
    //|  @errors
    //|  @return {number} len
    //|
    //#######################################
    len = 0;
    for (i = 0, len1 = string.length; i < len1; i++) {
      char = string[i];
      code = char.charCodeAt(0);
      switch (code) {
        case code <= 127:
          len += 1; // \x0000  - \x007F
          break;
        case code <= 2047:
          len += 2; // \x0080  - \x07FF
          break;
        case code <= 65535:
          len += 3; // \x0800  - \xFFFF
          break;
        case code <= 2097151:
          len += 4; // \x10000 - \x1FFFFF
          break;
        default:
          throw `string._utf8 >>> The character { ${char} } is beyond the unicode set.`;
      }
    }
    return len;
  };

}).call(this);
